{"version":3,"sources":["components/Input/index.js","lib/xml2js.js","components/Preview/index.js","components/App/index.js","index.js"],"names":["Input","input","setInput","className","id","value","onChange","e","target","spellCheck","onClick","icon","faEraser","size","traverse","xml","attributeMode","currentLevelTags","tagFinder","RegExp","json","tagShouldBeArray","charAt","length","skip","exec","selfClosing","tag","finishTag","tagLength","indexOf","start","index","end","currentTag","substring","isSelfClosing","validate","Error","closingTagIndex","findClosingIndex","lastIndex","temporary","attributes","collectAttributes","key","next","$","temp","nextObj","push","attributeFinder","foundAttributes","searchString","openinTag","replace","closingIndex","openingIndex","substr","match","tempIndex","Preview","source","useState","parsedSource","setParsedSource","useEffect","console","log","JSON","stringify","xml2js","readOnly","App","setSource","faCode","color","faCheck","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b966ad37.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './styles.css';\nimport { faEraser } from '@fortawesome/free-solid-svg-icons';\n\nfunction Input({ input, setInput }) {\n  return (\n    <div className='input-container'>\n      <textarea\n        id='editor'\n        value={input}\n        onChange={e => setInput(e.target.value)}\n        spellCheck={false}\n      />\n\n      <button id='clear-btn' onClick={() => setInput('')}>\n        <FontAwesomeIcon icon={faEraser} size='2x' />\n      </button>\n    </div>\n  );\n}\n\nexport default Input;\n","export default function traverse(xml, attributeMode) {\n  const tagFinder = new RegExp('<(.*?)[>|\\\\s|/]', 'g'); //find the current tag we are working on\n\n  const json = {};\n  let tagShouldBeArray = false;\n\n  //recursion base case\n  if (\n    xml === '' ||\n    (xml.charAt(0) !== '<' && xml.charAt(xml.length - 1) !== '>')\n  ) {\n    return xml;\n  }\n\n  var currentLevelTags;\n  var skip = 0;\n  while ((currentLevelTags = tagFinder.exec(xml)) !== null) {\n    let selfClosing = false;\n    const tag = currentLevelTags[1];\n\n    const finishTag = '</' + tag + '>';\n    const input = currentLevelTags.input;\n    const tagLength = input.indexOf('>', skip) + 1;\n\n    const start = currentLevelTags.index;\n    const end = currentLevelTags.input.indexOf('>', start) + 1;\n    const currentTag = currentLevelTags.input.substring(start, end);\n\n    selfClosing = isSelfClosing(currentTag);\n\n    if (!validate(currentTag)) {\n      const err = new Error('Invalid XML tag');\n      throw err;\n    }\n    //const closingTagIndex = input.indexOf(finishTag,tagLength);\n    const closingTagIndex = findClosingIndex(input, finishTag, tagLength);\n    if (selfClosing === false && closingTagIndex < 0) {\n      const err = new Error('Invalid XML');\n      throw err;\n    }\n\n    let substring; //substring will be either all child tags or if self closing tag just a blank string. i.e: <employee><name>Alex</name></employee> : <name>Alex</name> will be the substring of the <employee> parent tag\n    if (selfClosing) {\n      substring = '';\n      skip = currentTag.length + skip;\n    } else {\n      substring = input.substring(\n        input.indexOf('>', skip) + 1,\n        closingTagIndex\n      );\n      skip = tagLength + substring.length + finishTag.length;\n    }\n\n    tagFinder.lastIndex = skip; //skip all child tags of current level\n\n    if (!json[tag]) {\n      json[tag] = {};\n    } else {\n      tagShouldBeArray = true;\n    }\n\n    let temporary = {};\n    let attributes;\n    if (attributeMode) {\n      attributes = collectAttributes(currentTag);\n    }\n\n    //if currentTag contains attributes and attributeMode is enabled, attach them to json\n    if (tagShouldBeArray && attributeMode) {\n      temporary = attributes;\n    } else if (!tagShouldBeArray && attributeMode) {\n      for (let key in attributes) {\n        json[tag][key] = attributes[key];\n      }\n    }\n\n    //go one level deeper\n    let next = traverse(substring, attributeMode);\n\n    //when returning from recursion, build up the json\n    if (typeof next === 'string' && next !== '') {\n      next = { $: next };\n    }\n\n    if (tagShouldBeArray && !json[tag].length) {\n      const temp = json[tag];\n      json[tag] = [temp];\n      const nextObj = {};\n      for (let key in next) {\n        nextObj[key] = next[key];\n      }\n      temporary = { ...temporary, ...nextObj };\n      json[tag].push(temporary);\n    } else if (tagShouldBeArray) {\n      const nextObj = {};\n      for (let key in next) {\n        nextObj[key] = next[key];\n      }\n      temporary = { ...temporary, ...nextObj };\n      json[tag].push(temporary);\n    } else {\n      for (let key in next) {\n        json[tag][key] = next[key];\n      }\n    }\n  }\n\n  return json;\n}\n\n//Helper methods\n\n//Determine if a tag is self closing or not. Could be improved\nfunction isSelfClosing(currentTag) {\n  if (currentTag.indexOf('/>') > -1) {\n    return true;\n  }\n  return false;\n}\n\n//Collect all the attributes of the current tag and return an object in form of {attribute:values}\nfunction collectAttributes(currentTag) {\n  const attributeFinder = new RegExp('(\\\\S*)=\"(.*?)\"', 'g');\n  const foundAttributes = {};\n\n  let attributes;\n  while ((attributes = attributeFinder.exec(currentTag)) !== null) {\n    const key = attributes[1];\n    const value = attributes[2];\n\n    foundAttributes[key] = value;\n  }\n\n  return foundAttributes;\n}\n\nfunction validate(currentTag) {\n  if (\n    currentTag.charAt(0) === '<' &&\n    currentTag.charAt(1) === '?' &&\n    currentTag.charAt(currentTag.length - 1) === '>' &&\n    currentTag.charAt(currentTag.length - 2) === '?'\n  ) {\n    return true;\n  }\n\n  if (\n    currentTag.charAt(0) === '<' &&\n    (currentTag.charAt(currentTag.length - 2) +\n      currentTag.charAt(currentTag.length - 1) ===\n      '/>' ||\n      currentTag.charAt(currentTag.length - 1) === '>')\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction findClosingIndex(searchString, tag, start) {\n  const openinTag = tag.replace('</', '<').replace('>', '');\n  let closingIndex = searchString.indexOf(tag, start);\n  let openingIndex = searchString.indexOf(openinTag, start);\n\n  if (closingIndex < openingIndex) {\n    return closingIndex;\n  }\n\n  const sub = searchString.substr(openingIndex, closingIndex - openingIndex);\n\n  if (!sub.match(new RegExp(openinTag + '\\\\W'))) {\n    return closingIndex;\n  }\n\n  while (closingIndex > 0) {\n    const tempIndex = searchString.indexOf(tag, closingIndex + 1);\n    if (tempIndex > 0) {\n      closingIndex = tempIndex;\n    } else {\n      break;\n    }\n  }\n\n  return closingIndex;\n}\n","import React, { useEffect, useState } from 'react';\nimport xml2js from '../../lib/xml2js';\n\nimport './styles.css';\n\nfunction Preview({ source }) {\n  const [parsedSource, setParsedSource] = useState('');\n\n  useEffect(() => {\n    setParsedSource(\n      source\n        .replace(/{/g, '\"')\n        .replace(/}/g, '\"')\n        .replace(/\\t/g, '')\n        .replace(/\\n/g, '')\n    );\n    console.log(parsedSource);\n  }, [parsedSource, source]);\n\n  return (\n    <div className='preview-container'>\n      <textarea\n        id='preview'\n        value={\n          parsedSource && JSON.stringify(xml2js(parsedSource, true), null, 2)\n        }\n        readOnly\n      ></textarea>\n    </div>\n  );\n}\n\nexport default Preview;\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCode, faCheck } from '@fortawesome/free-solid-svg-icons';\n\nimport Input from '../Input';\nimport Preview from '../Preview';\n\nimport './styles.css';\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [source, setSource] = useState('');\n\n  return (\n    <div className='App'>\n      <Input setInput={setInput} input={input} />\n      <div id='menu-container'>\n        <span id='app-icon'>\n          <FontAwesomeIcon id='second' icon={faCode} color='#fff' size='3x' />\n        </span>\n\n        <button id='confirm-button' onClick={() => setSource(input)}>\n          <FontAwesomeIcon icon={faCheck} color='#fff' size='3x' />\n        </button>\n\n        <h1 id='company-icon'>RMP</h1>\n      </div>\n      <Preview source={source} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}